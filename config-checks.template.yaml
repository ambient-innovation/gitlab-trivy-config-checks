# ⚠️ DEPRECATION WARNING ⚠️
# This template is DEPRECATED and will be removed in a future version.
# Please migrate to the new unified trivy-scanning.template.yaml
# 
# Migration guide:
# Replace this:
#   extends: .config_scanning
# With this:
#   extends: .trivy_scanning
#   variables:
#     PLUGIN_SEVERITY_MISCONFIG: "MEDIUM,HIGH,CRITICAL,UNKNOWN"
#     PLUGIN_PKG_TYPES_MISCONFIG: "library, os"
#
# For more information, see: https://github.com/ambient-innovation/gitlab-trivy-codequality-template/releases/latest



.config_scanning:
  image: 
    name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/aquasec/trivy
    entrypoint: [""]
  tags:
    - small-runner
  stage: test
  variables:
    TRIVY_NO_PROGRESS: "true"
    SEVERITY: "MEDIUM,HIGH,CRITICAL,UNKNOWN"
    TRIVY_SEVERITY: "$SEVERITY"    
    TRIVY_CACHE_DIR: ".trivycache/"
    # Set to "backend" and "frontend" in the respective jobs in mono-repos.
    DIRECTORY: "./"
    # Is like that for backward-compatibility, previously we only had DIRECTORY.
    FILENAME: "gl-codeclimate-$CI_JOB_NAME_SLUG.json"
    EXIT_CODE_ON_FINDINGS: 1
    TRIVY_IGNOREFILE_DIR: "./.trivyignore.yaml"
  before_script:
    # Show deprecation warning
    - echo "⚠️  WARNING: The .config_scanning template is DEPRECATED!"
    - echo "⚠️  Please migrate to .trivy_scanning template."
    - echo "⚠️  See migration guide: https://github.com/ambient-innovation/gitlab-trivy-codequality-template/releases/latest"
    - echo "⚠️  This template will be removed in a future version."
    - echo ""
    - if [ ! -e ${TRIVY_CACHE_DIR} ]; then mkdir -p ${TRIVY_CACHE_DIR}; fi
    - if [ ! -e ${TRIVY_CACHE_DIR}config-checks.tpl ]; then  wget --no-verbose https://raw.githubusercontent.com/ambient-innovation/gitlab-trivy-config-checks/main/config-checks.tpl -O ${TRIVY_CACHE_DIR}config-checks.tpl; fi
    # Create trivyignore.yaml if it doesn't exist yet
    - 'if [ ! -e ${TRIVY_IGNOREFILE_DIR} ]; then echo "ambient_trivyignore_placeholder: None" > ${TRIVY_IGNOREFILE_DIR}; fi'
  allow_failure: false
  script:
    # Report results to json file
    - trivy config --ignorefile ${TRIVY_IGNOREFILE_DIR} --exit-code 0 --format template --template "@{TRIVY_CACHE_DIR}config-checks.tpl" -o ${FILENAME} ${DIRECTORY} >/dev/null 2>&1 || true
    # Report results as table
    - trivy config --ignorefile ${TRIVY_IGNOREFILE_DIR} --exit-code ${EXIT_CODE_ON_FINDINGS} --format table ${DIRECTORY}
    # Fail if 0 config files are found in folder. Such case happens when there is any error in your helm chart.
    - >
      if trivy config charts --ignorefile ${TRIVY_IGNOREFILE_DIR} 2>&1 | grep -q 'Detected config files: 0'; then
        echo "Detected 0 config files. Something is wrong. Check your helm chart or other config files for possible errors. Running trivy with --debug option should help as well."
        exit 1
      fi
  cache:
    paths:
      - .trivycache/
  artifacts:
    paths:
      - $FILENAME
    reports:
      codequality: $FILENAME
    when: always
